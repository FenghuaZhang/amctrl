/* 
 * @(#)AmaReportHeartBeatToController.java        1.0 18/02/16
 *
 * This file has been auto-generated by JNC, the
 * Java output format plug-in of pyang.
 * Origin: module "flexbng-device-info", revision: "2015-11-11".
 */

package gen.deviceInfo.flexbngDeviceInfo;

import com.tailf.jnc.Element;
import com.tailf.jnc.JNCException;
import com.tailf.jnc.YangElement;
import com.tailf.jnc.YangUInt32;

import gen.deviceInfo.flexbngDeviceInfo.FlexbngVbras;

/**
 * This class represents an element from 
 * the namespace urn:ietf:params:xml:ns:yang:ietf-address-pool:flexbng:vbras
 * generated to "src/gen/deviceInfo/flexbngDeviceInfo/ama-report-heart-beat-to-controller"
 * <p>
 * See line 181 in
 * ../yang/flexbng-device-info.yang
 *
 * @version 1.0 2016-02-18
 * @author Auto Generated
 */
public class AmaReportHeartBeatToController extends YangElement {

    private static final long serialVersionUID = 1L;

    /**
     * Constructor for an empty AmaReportHeartBeatToController object.
     */
    public AmaReportHeartBeatToController() {
        super(FlexbngVbras.NAMESPACE, "ama-report-heart-beat-to-controller");
        setDefaultPrefix();
        setPrefix(FlexbngVbras.PREFIX);
    }

    /**
     * Clones this object, returning an exact copy.
     * @return A clone of the object.
     */
    public AmaReportHeartBeatToController clone() {
        return (AmaReportHeartBeatToController)cloneContent(new AmaReportHeartBeatToController());
    }

    /**
     * Clones this object, returning a shallow copy.
     * @return A clone of the object. Children are not included.
     */
    public AmaReportHeartBeatToController cloneShallow() {
        return (AmaReportHeartBeatToController)cloneShallowContent(new AmaReportHeartBeatToController());
    }

    /**
     * @return An array with the identifiers of any key children
     */
    public String[] keyNames() {
        return null;
    }

    /**
     * @return An array with the identifiers of any children, in order.
     */
    public String[] childrenNames() {
        return new String[] {
            "ama-id",
        };
    }

    /* Access methods for optional leaf child: "ama-id". */

    /**
     * Gets the value for child leaf "ama-id".
     * @return The value of the leaf.
     */
    public YangUInt32 getAmaIdValue() throws JNCException {
        return (YangUInt32)getValue("ama-id");
    }

    /**
     * Sets the value for child leaf "ama-id",
     * using instance of generated typedef class.
     * @param amaIdValue The value to set.
     * @param amaIdValue used during instantiation.
     */
    public void setAmaIdValue(YangUInt32 amaIdValue) throws JNCException {
        setLeafValue(FlexbngVbras.NAMESPACE,
            "ama-id",
            amaIdValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "ama-id",
     * using Java primitive values.
     * @param amaIdValue used during instantiation.
     */
    public void setAmaIdValue(long amaIdValue) throws JNCException {
        setAmaIdValue(new YangUInt32(amaIdValue));
    }

    /**
     * Sets the value for child leaf "ama-id",
     * using a String value.
     * @param amaIdValue used during instantiation.
     */
    public void setAmaIdValue(String amaIdValue) throws JNCException {
        setAmaIdValue(new YangUInt32(amaIdValue));
    }

    /**
     * Unsets the value for child leaf "ama-id".
     */
    public void unsetAmaIdValue() throws JNCException {
        delete("ama-id");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "ama-id" leaf will not have a value.
     */
    public void addAmaId() throws JNCException {
        setLeafValue(FlexbngVbras.NAMESPACE,
            "ama-id",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "ama-id" with operation "replace".
     */
    public void markAmaIdReplace() throws JNCException {
        markLeafReplace("amaId");
    }

    /**
     * Marks the leaf "ama-id" with operation "merge".
     */
    public void markAmaIdMerge() throws JNCException {
        markLeafMerge("amaId");
    }

    /**
     * Marks the leaf "ama-id" with operation "create".
     */
    public void markAmaIdCreate() throws JNCException {
        markLeafCreate("amaId");
    }

    /**
     * Marks the leaf "ama-id" with operation "delete".
     */
    public void markAmaIdDelete() throws JNCException {
        markLeafDelete("amaId");
    }

    /**
     * Support method for addChild.
     * Adds a child to this object.
     * 
     * @param child The child to add
     */
    public void addChild(Element child) {
        super.addChild(child);
    }

}
