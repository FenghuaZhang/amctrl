<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd ">

    <!-- <context:annotation-config /> -->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jms.properties</value>
        </property>
    </bean>

    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <property name="connectionFactory" ref="connectionFactory"></property>
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="targetConnectionFactory" />
    </bean>

    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${brokerURL}" />
    </bean>

    <!-- 使用bean方式创建broker -->
    <!-- <bean id="broker" class="org.apache.activemq.xbean.BrokerFactoryBean">
        <property name="config" value="classpath:activemq.xml" />
        <property name="start" value="true" />
    </bean> -->

    <!-- 使用xbean方式创建broker -->
    <!-- <amq:broker useJmx="false" persistent="false" schedulePeriodForDestinationPurge="10000">
        <amq:transportConnectors>
          <amq:transportConnector uri="${brokerURL}" />
        </amq:transportConnectors>
        <amq:destinationPolicy>
            <amq:policyMap>
                <amq:policyEntries>
                    <amq:policyEntry queue=">" gcInactiveDestinations="true" inactiveTimoutBeforeGC="30000">
                    </amq:policyEntry>
                </amq:policyEntries>
            </amq:policyMap>
        </amq:destinationPolicy>
    </amq:broker>

    JMS ConnectionFactory to use, configuring the embedded broker using XML
    <amq:connectionFactory id="targetConnectionFactory" brokerURL="vm://localhost"/> -->

    <!--这个是队列目的地 -->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>queue</value>
        </constructor-arg>
    </bean>

    <!-- 消息监听容器 -->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="queueDestination" />
        <property name="messageListener" ref="controllerService" />
    </bean>

    <bean id="addressBlockMessageService" class="com.chinatele.app.amctrl.service.impl.AddressBlockMessageServiceImpl">
        <property name="jmsTemplate" ref="jmsTemplate" />
    </bean>

    <bean id="controllerService" class="com.chinatele.app.amctrl.service.impl.ControllerServiceImpl" >
        <property name="netconfDeviceService" ref="netconfDeviceService"/>
    </bean>

    <!-- <bean id="certusnetIOSubscriber" class="com.chinatele.app.amctrl.netconf.CertusnetIOSubscriber" scope="prototype">
        <constructor-arg index="0" value="mydev" />
        <constructor-arg index="1" ref="addressBlockMessageService" />
        <constructor-arg index="2" ref="queueDestination" />
    </bean> -->

    <bean id="client" class="com.chinatele.app.amctrl.netconf.Client">
       <!--  <property name="certusnetIOSubscriber" ref="certusnetIOSubscriber" /> -->
       <property name="addressBlockMessageService" ref="addressBlockMessageService" />
       <property name="queueDestination" ref="queueDestination" />
    </bean>

    <bean id="netconfDeviceService" class="com.chinatele.app.amctrl.service.impl.NetconfDeviceServiceImpl">
        <property name="client" ref="client" />
    </bean>
</beans>